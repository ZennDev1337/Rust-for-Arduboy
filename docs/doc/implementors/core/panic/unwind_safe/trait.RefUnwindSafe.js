(function() {var implementors = {
"arduboy_rust":[["impl RefUnwindSafe for <a class=\"struct\" href=\"arduboy_rust/prelude/struct.ButtonSet.html\" title=\"struct arduboy_rust::prelude::ButtonSet\">ButtonSet</a>",1,["arduboy_rust::hardware::buttons::ButtonSet"]],["impl RefUnwindSafe for <a class=\"enum\" href=\"arduboy_rust/prelude/enum.Color.html\" title=\"enum arduboy_rust::prelude::Color\">Color</a>",1,["arduboy_rust::libraries::arduboy2_library::arduboy2::Color"]],["impl RefUnwindSafe for <a class=\"struct\" href=\"arduboy_rust/prelude/struct.Rect.html\" title=\"struct arduboy_rust::prelude::Rect\">Rect</a>",1,["arduboy_rust::libraries::arduboy2_library::arduboy2::Rect"]],["impl RefUnwindSafe for <a class=\"struct\" href=\"arduboy_rust/prelude/struct.Point.html\" title=\"struct arduboy_rust::prelude::Point\">Point</a>",1,["arduboy_rust::libraries::arduboy2_library::arduboy2::Point"]],["impl RefUnwindSafe for <a class=\"struct\" href=\"arduboy_rust/prelude/struct.Arduboy2.html\" title=\"struct arduboy_rust::prelude::Arduboy2\">Arduboy2</a>",1,["arduboy_rust::libraries::arduboy2_library::arduboy2::Arduboy2"]],["impl RefUnwindSafe for <a class=\"struct\" href=\"arduboy_rust/prelude/struct.ArduboyTones.html\" title=\"struct arduboy_rust::prelude::ArduboyTones\">ArduboyTones</a>",1,["arduboy_rust::libraries::arduboy_tones_library::arduboy_tones::ArduboyTones"]],["impl RefUnwindSafe for <a class=\"struct\" href=\"arduboy_rust/prelude/struct.EEPROM.html\" title=\"struct arduboy_rust::prelude::EEPROM\">EEPROM</a>",1,["arduboy_rust::libraries::arduino_system::eeprom::EEPROM"]],["impl RefUnwindSafe for <a class=\"struct\" href=\"arduboy_rust/prelude/struct.EEPROMBYTE.html\" title=\"struct arduboy_rust::prelude::EEPROMBYTE\">EEPROMBYTE</a>",1,["arduboy_rust::libraries::arduino_system::eeprom::EEPROMBYTE"]],["impl RefUnwindSafe for <a class=\"struct\" href=\"arduboy_rust/prelude/struct.EEPROMBYTECHECKLESS.html\" title=\"struct arduboy_rust::prelude::EEPROMBYTECHECKLESS\">EEPROMBYTECHECKLESS</a>",1,["arduboy_rust::libraries::arduino_system::eeprom::EEPROMBYTECHECKLESS"]],["impl RefUnwindSafe for <a class=\"struct\" href=\"arduboy_rust/prelude/struct.Pstring.html\" title=\"struct arduboy_rust::prelude::Pstring\">Pstring</a>",1,["arduboy_rust::libraries::arduino_system::progmem::Pstring"]],["impl RefUnwindSafe for <a class=\"struct\" href=\"arduboy_rust/prelude/struct.ArdVoice.html\" title=\"struct arduboy_rust::prelude::ArdVoice\">ArdVoice</a>",1,["arduboy_rust::libraries::ardvoice_library::ardvoice::ArdVoice"]]],
"byteorder":[["impl RefUnwindSafe for <a class=\"enum\" href=\"byteorder/enum.BigEndian.html\" title=\"enum byteorder::BigEndian\">BigEndian</a>",1,["byteorder::BigEndian"]],["impl RefUnwindSafe for <a class=\"enum\" href=\"byteorder/enum.LittleEndian.html\" title=\"enum byteorder::LittleEndian\">LittleEndian</a>",1,["byteorder::LittleEndian"]]],
"critical_section":[["impl&lt;T&gt; !RefUnwindSafe for <a class=\"struct\" href=\"critical_section/struct.Mutex.html\" title=\"struct critical_section::Mutex\">Mutex</a>&lt;T&gt;",1,["critical_section::mutex::Mutex"]],["impl&lt;'cs&gt; RefUnwindSafe for <a class=\"struct\" href=\"critical_section/struct.CriticalSection.html\" title=\"struct critical_section::CriticalSection\">CriticalSection</a>&lt;'cs&gt;",1,["critical_section::CriticalSection"]],["impl RefUnwindSafe for <a class=\"struct\" href=\"critical_section/struct.RestoreState.html\" title=\"struct critical_section::RestoreState\">RestoreState</a>",1,["critical_section::RestoreState"]]],
"hash32":[["impl RefUnwindSafe for <a class=\"struct\" href=\"hash32/struct.FnvHasher.html\" title=\"struct hash32::FnvHasher\">Hasher</a>",1,["hash32::fnv::Hasher"]],["impl RefUnwindSafe for <a class=\"struct\" href=\"hash32/struct.Murmur3Hasher.html\" title=\"struct hash32::Murmur3Hasher\">Hasher</a>",1,["hash32::murmur3::Hasher"]],["impl&lt;H&gt; RefUnwindSafe for <a class=\"struct\" href=\"hash32/struct.BuildHasherDefault.html\" title=\"struct hash32::BuildHasherDefault\">BuildHasherDefault</a>&lt;H&gt;<span class=\"where fmt-newline\">where\n    H: RefUnwindSafe,</span>",1,["hash32::BuildHasherDefault"]]],
"heapless":[["impl&lt;T, const N: usize&gt; RefUnwindSafe for <a class=\"struct\" href=\"heapless/struct.Deque.html\" title=\"struct heapless::Deque\">Deque</a>&lt;T, N&gt;<span class=\"where fmt-newline\">where\n    T: RefUnwindSafe,</span>",1,["heapless::deque::Deque"]],["impl&lt;T, const N: usize&gt; RefUnwindSafe for <a class=\"struct\" href=\"heapless/struct.HistoryBuffer.html\" title=\"struct heapless::HistoryBuffer\">HistoryBuffer</a>&lt;T, N&gt;<span class=\"where fmt-newline\">where\n    T: RefUnwindSafe,</span>",1,["heapless::histbuf::HistoryBuffer"]],["impl&lt;'a, T, const N: usize&gt; RefUnwindSafe for <a class=\"struct\" href=\"heapless/struct.OldestOrdered.html\" title=\"struct heapless::OldestOrdered\">OldestOrdered</a>&lt;'a, T, N&gt;<span class=\"where fmt-newline\">where\n    T: RefUnwindSafe,</span>",1,["heapless::histbuf::OldestOrdered"]],["impl&lt;'a, K, V, const N: usize&gt; RefUnwindSafe for <a class=\"enum\" href=\"heapless/enum.Entry.html\" title=\"enum heapless::Entry\">Entry</a>&lt;'a, K, V, N&gt;<span class=\"where fmt-newline\">where\n    K: RefUnwindSafe,\n    V: RefUnwindSafe,</span>",1,["heapless::indexmap::Entry"]],["impl&lt;'a, K, V, const N: usize&gt; RefUnwindSafe for <a class=\"struct\" href=\"heapless/struct.OccupiedEntry.html\" title=\"struct heapless::OccupiedEntry\">OccupiedEntry</a>&lt;'a, K, V, N&gt;<span class=\"where fmt-newline\">where\n    K: RefUnwindSafe,\n    V: RefUnwindSafe,</span>",1,["heapless::indexmap::OccupiedEntry"]],["impl&lt;'a, K, V, const N: usize&gt; RefUnwindSafe for <a class=\"struct\" href=\"heapless/struct.VacantEntry.html\" title=\"struct heapless::VacantEntry\">VacantEntry</a>&lt;'a, K, V, N&gt;<span class=\"where fmt-newline\">where\n    K: RefUnwindSafe,\n    V: RefUnwindSafe,</span>",1,["heapless::indexmap::VacantEntry"]],["impl&lt;K, V, S, const N: usize&gt; RefUnwindSafe for <a class=\"struct\" href=\"heapless/struct.IndexMap.html\" title=\"struct heapless::IndexMap\">IndexMap</a>&lt;K, V, S, N&gt;<span class=\"where fmt-newline\">where\n    K: RefUnwindSafe,\n    S: RefUnwindSafe,\n    V: RefUnwindSafe,</span>",1,["heapless::indexmap::IndexMap"]],["impl&lt;T, S, const N: usize&gt; RefUnwindSafe for <a class=\"struct\" href=\"heapless/struct.IndexSet.html\" title=\"struct heapless::IndexSet\">IndexSet</a>&lt;T, S, N&gt;<span class=\"where fmt-newline\">where\n    S: RefUnwindSafe,\n    T: RefUnwindSafe,</span>",1,["heapless::indexset::IndexSet"]],["impl&lt;K, V, const N: usize&gt; RefUnwindSafe for <a class=\"struct\" href=\"heapless/struct.LinearMap.html\" title=\"struct heapless::LinearMap\">LinearMap</a>&lt;K, V, N&gt;<span class=\"where fmt-newline\">where\n    K: RefUnwindSafe,\n    V: RefUnwindSafe,</span>",1,["heapless::linear_map::LinearMap"]],["impl&lt;const N: usize&gt; RefUnwindSafe for <a class=\"struct\" href=\"heapless/struct.String.html\" title=\"struct heapless::String\">String</a>&lt;N&gt;",1,["heapless::string::String"]],["impl&lt;T, const N: usize&gt; RefUnwindSafe for <a class=\"struct\" href=\"heapless/struct.Vec.html\" title=\"struct heapless::Vec\">Vec</a>&lt;T, N&gt;<span class=\"where fmt-newline\">where\n    T: RefUnwindSafe,</span>",1,["heapless::vec::Vec"]],["impl RefUnwindSafe for <a class=\"enum\" href=\"heapless/binary_heap/enum.Min.html\" title=\"enum heapless::binary_heap::Min\">Min</a>",1,["heapless::binary_heap::Min"]],["impl RefUnwindSafe for <a class=\"enum\" href=\"heapless/binary_heap/enum.Max.html\" title=\"enum heapless::binary_heap::Max\">Max</a>",1,["heapless::binary_heap::Max"]],["impl&lt;T, K, const N: usize&gt; RefUnwindSafe for <a class=\"struct\" href=\"heapless/binary_heap/struct.BinaryHeap.html\" title=\"struct heapless::binary_heap::BinaryHeap\">BinaryHeap</a>&lt;T, K, N&gt;<span class=\"where fmt-newline\">where\n    K: RefUnwindSafe,\n    T: RefUnwindSafe,</span>",1,["heapless::binary_heap::BinaryHeap"]],["impl&lt;'a, T, K, const N: usize&gt; RefUnwindSafe for <a class=\"struct\" href=\"heapless/binary_heap/struct.PeekMut.html\" title=\"struct heapless::binary_heap::PeekMut\">PeekMut</a>&lt;'a, T, K, N&gt;<span class=\"where fmt-newline\">where\n    K: RefUnwindSafe,\n    T: RefUnwindSafe,</span>",1,["heapless::binary_heap::PeekMut"]],["impl RefUnwindSafe for <a class=\"struct\" href=\"heapless/sorted_linked_list/struct.Min.html\" title=\"struct heapless::sorted_linked_list::Min\">Min</a>",1,["heapless::sorted_linked_list::Min"]],["impl RefUnwindSafe for <a class=\"struct\" href=\"heapless/sorted_linked_list/struct.Max.html\" title=\"struct heapless::sorted_linked_list::Max\">Max</a>",1,["heapless::sorted_linked_list::Max"]],["impl&lt;T, Idx&gt; RefUnwindSafe for <a class=\"struct\" href=\"heapless/sorted_linked_list/struct.Node.html\" title=\"struct heapless::sorted_linked_list::Node\">Node</a>&lt;T, Idx&gt;<span class=\"where fmt-newline\">where\n    Idx: RefUnwindSafe,\n    T: RefUnwindSafe,</span>",1,["heapless::sorted_linked_list::Node"]],["impl&lt;T, Idx, K, const N: usize&gt; RefUnwindSafe for <a class=\"struct\" href=\"heapless/sorted_linked_list/struct.SortedLinkedList.html\" title=\"struct heapless::sorted_linked_list::SortedLinkedList\">SortedLinkedList</a>&lt;T, Idx, K, N&gt;<span class=\"where fmt-newline\">where\n    Idx: RefUnwindSafe,\n    K: RefUnwindSafe,\n    T: RefUnwindSafe,</span>",1,["heapless::sorted_linked_list::SortedLinkedList"]],["impl RefUnwindSafe for <a class=\"struct\" href=\"heapless/sorted_linked_list/struct.LinkedIndexU8.html\" title=\"struct heapless::sorted_linked_list::LinkedIndexU8\">LinkedIndexU8</a>",1,["heapless::sorted_linked_list::LinkedIndexU8"]],["impl RefUnwindSafe for <a class=\"struct\" href=\"heapless/sorted_linked_list/struct.LinkedIndexU16.html\" title=\"struct heapless::sorted_linked_list::LinkedIndexU16\">LinkedIndexU16</a>",1,["heapless::sorted_linked_list::LinkedIndexU16"]],["impl RefUnwindSafe for <a class=\"struct\" href=\"heapless/sorted_linked_list/struct.LinkedIndexUsize.html\" title=\"struct heapless::sorted_linked_list::LinkedIndexUsize\">LinkedIndexUsize</a>",1,["heapless::sorted_linked_list::LinkedIndexUsize"]],["impl&lt;'a, T, Idx, K, const N: usize&gt; RefUnwindSafe for <a class=\"struct\" href=\"heapless/sorted_linked_list/struct.Iter.html\" title=\"struct heapless::sorted_linked_list::Iter\">Iter</a>&lt;'a, T, Idx, K, N&gt;<span class=\"where fmt-newline\">where\n    Idx: RefUnwindSafe,\n    K: RefUnwindSafe,\n    T: RefUnwindSafe,</span>",1,["heapless::sorted_linked_list::Iter"]],["impl&lt;'a, T, Idx, K, const N: usize&gt; RefUnwindSafe for <a class=\"struct\" href=\"heapless/sorted_linked_list/struct.FindMut.html\" title=\"struct heapless::sorted_linked_list::FindMut\">FindMut</a>&lt;'a, T, Idx, K, N&gt;<span class=\"where fmt-newline\">where\n    Idx: RefUnwindSafe,\n    K: RefUnwindSafe,\n    T: RefUnwindSafe,</span>",1,["heapless::sorted_linked_list::FindMut"]]]
};if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()